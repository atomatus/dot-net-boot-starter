# This workflow execute a sequence of jobs to build, 
# release and publish a packages to NuGet.

name: 00 - Dot Net Deploy to NuGet

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  PROJ_BS_PATH: 'Atomatus.Bootstarter/Com.Atomatus.Bootstarter/Com.Atomatus.Bootstarter.csproj'
  PROJ_BS_COSMOS_PATH: 'Atomatus.Bootstarter/Com.Atomatus.Bootstarter.Cosmos/Com.Atomatus.Bootstarter.Cosmos.csproj'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
          
      # region Bootstarter
      - name: 'Restore Project Bootstarter'
        if: ${{ success() }}
        run: dotnet restore ${{ env.PROJ_BS_PATH }}

      - name: 'Build Project Bootstarter'        
        if: ${{ success() }}
        run: dotnet build ${{ env.PROJ_BS_PATH }} --no-restore --configuration Release
      
      - name: 'Test Project Bootstarter'        
        if: ${{ success() }}
        run: dotnet test ${{ env.PROJ_BS_PATH }}

      - name: Publish Bootstarter to NuGet
        if: ${{ success() }}
        uses: brandedoutcast/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: ${{ env.PROJ_BS_PATH }}
          VERSION_REGEX: '^\s*<PackageVersion>(.*)</PackageVersion>\s*$'
          TAG_FORMAT: '*'
          NUGET_KEY: ${{ secrets.NUGET_COM_ATOMATUS_AUTH_KEY }}
      # endregion 
                
      # region Bootstarter.Cosmos
      - name: 'Restore Project Bootstarter.Cosmos'
        if: ${{ success() }}
        run: dotnet restore ${{ env.PROJ_BS_COSMOS_PATH }}

      - name: 'Build Project Bootstarter.Cosmos'
        if: ${{ success() }}
        run: dotnet build ${{ env.PROJ_BS_COSMOS_PATH }} --no-restore --configuration Release
      
      - name: 'Test Project Bootstarter.Cosmos'
        if: ${{ success() }}
        run: dotnet test ${{ env.PROJ_BS_COSMOS_PATH }}

      - name: Publish Bootstarter.Cosmos to NuGet
        if: ${{ success() }}
        uses: brandedoutcast/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: ${{ env.PROJ_BS_COSMOS_PATH }}
          VERSION_REGEX: '^\s*<PackageVersion>(.*)</PackageVersion>\s*$'
          TAG_FORMAT: '*'
          NUGET_KEY: ${{ secrets.NUGET_COM_ATOMATUS_AUTH_KEY }}
      # endregion 
      